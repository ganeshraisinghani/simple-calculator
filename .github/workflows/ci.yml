name: Python CI/CD

on: [push]

jobs:
  build-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8  # Install flake8 here
          # Remove the following line:
          # pip install unittest
      - name: Run unit tests
        run: python -m unittest test_calculator.py
      - name: Run simple integration test
        run: python integration_test.py
      - name: Run static code analysis with flake8
        run: flake8 calculator.py test_calculator.py integration_test.py

  deploy-staging:
    needs: build-test
    runs-on: windows-latest # Or runs-on: windows-latest if you specifically want a Windows runner
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Create staging directory (simulated)
        run: |
          # For Windows runner, you would use 'mkdir'
          mkdir -p /tmp/calculator_staging
      - name: Copy application to staging (simulated)
        run: |
          # For Windows runner, you would use 'copy' or 'cp' (Git Bash provides cp)
          cp calculator.py /tmp/calculator_staging/
      - name: Verify "deployment" (simulated)
        run: |
          echo "Calculator 'deployed' to /tmp/calculator_staging/"
          # For Windows runner, you would use 'dir'
          ls /tmp/calculator_staging/ # Git Bash 'ls' works on Windows runners too
